<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutToArrive" xml:space="preserve">
    <value>即將抵達</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>用於檢測 Warframe 的各種信息</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Warframe Alerting Prime</value>
  </data>
  <data name="AppShortName" xml:space="preserve">
    <value>WFA</value>
  </data>
  <data name="Arbitration" xml:space="preserve">
    <value>仲裁</value>
  </data>
  <data name="Arrived" xml:space="preserve">
    <value>已經到達</value>
  </data>
  <data name="Attacker" xml:space="preserve">
    <value>入侵方</value>
  </data>
  <data name="BackToPrevious" xml:space="preserve">
    <value>返回上一頁</value>
  </data>
  <data name="CambionDrift" xml:space="preserve">
    <value>魔胎之境</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="Cold" xml:space="preserve">
    <value>寒冷</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="ConstructionProgress" xml:space="preserve">
    <value>戰艦建造進度</value>
  </data>
  <data name="DailySale" xml:space="preserve">
    <value>每日折扣</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>深色</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>白晝</value>
  </data>
  <data name="Defender" xml:space="preserve">
    <value>防守方</value>
  </data>
  <data name="Earth" xml:space="preserve">
    <value>地球</value>
  </data>
  <data name="EndDateFormat" xml:space="preserve">
    <value>{0}結束</value>
  </data>
  <data name="Enemy" xml:space="preserve">
    <value>敵人</value>
  </data>
  <data name="ExpiryDateFormat" xml:space="preserve">
    <value>{0}過期</value>
  </data>
  <data name="Fissure" xml:space="preserve">
    <value>虛空裂縫</value>
  </data>
  <data name="FollowSystem" xml:space="preserve">
    <value>跟隨系統</value>
  </data>
  <data name="Fomorian" xml:space="preserve">
    <value>巨人戰艦</value>
  </data>
  <data name="Found" xml:space="preserve">
    <value>已發現</value>
  </data>
  <data name="GameEvents" xml:space="preserve">
    <value>遊戲活動</value>
  </data>
  <data name="HelpAndSupport" xml:space="preserve">
    <value>幫助 &amp; 支持</value>
  </data>
  <data name="Invasions" xml:space="preserve">
    <value>入侵任務</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>資料庫</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>淺色</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>地點</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>菜單</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>新聞</value>
  </data>
  <data name="Night" xml:space="preserve">
    <value>黑夜</value>
  </data>
  <data name="Nightwave" xml:space="preserve">
    <value>午夜電波</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>沒找到所需要的內容</value>
  </data>
  <data name="NoEvents" xml:space="preserve">
    <value>當前沒有遊戲活動</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>未發現</value>
  </data>
  <data name="OrbVallis" xml:space="preserve">
    <value>奧布山谷</value>
  </data>
  <data name="PlainsOfEidolon" xml:space="preserve">
    <value>夜靈平野</value>
  </data>
  <data name="Razorback" xml:space="preserve">
    <value>利刃豺狼</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="Reward" xml:space="preserve">
    <value>獎勵</value>
  </data>
  <data name="SearchTip" xml:space="preserve">
    <value>從 Warframe Market 中找找你想要的</value>
  </data>
  <data name="SearchTipSlim" xml:space="preserve">
    <value>在 WM 中搜索</value>
  </data>
  <data name="ShowItems" xml:space="preserve">
    <value>查看物品</value>
  </data>
  <data name="Skirmish" xml:space="preserve">
    <value>前哨戰</value>
  </data>
  <data name="Sortie" xml:space="preserve">
    <value>突擊任務</value>
  </data>
  <data name="SteelPath" xml:space="preserve">
    <value>鋼鐵之路</value>
  </data>
  <data name="SyndicateMissions" xml:space="preserve">
    <value>賞金任務</value>
  </data>
  <data name="Tier" xml:space="preserve">
    <value>紀元</value>
  </data>
  <data name="VoidTrader" xml:space="preserve">
    <value>虛空商人</value>
  </data>
  <data name="VoidTraderItems" xml:space="preserve">
    <value>虛空商人貨品清單</value>
  </data>
  <data name="Warm" xml:space="preserve">
    <value>溫暖</value>
  </data>
  <data name="WorldCycle" xml:space="preserve">
    <value>世界週期</value>
  </data>
  <data name="WorldState" xml:space="preserve">
    <value>世界狀態</value>
  </data>
  <data name="Zariman" xml:space="preserve">
    <value>扎里曼號</value>
  </data>
</root>