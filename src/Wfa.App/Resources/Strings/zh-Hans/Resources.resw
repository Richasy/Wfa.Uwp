<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutToArrive" xml:space="preserve">
    <value>即将抵达</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Warframe 的动态信息</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Warframe Alerting Prime</value>
  </data>
  <data name="AppShortName" xml:space="preserve">
    <value>WFA</value>
  </data>
  <data name="Arbitration" xml:space="preserve">
    <value>仲裁</value>
  </data>
  <data name="Arrived" xml:space="preserve">
    <value>已经到达</value>
  </data>
  <data name="BackToPrevious" xml:space="preserve">
    <value>返回上一页</value>
  </data>
  <data name="CambionDrift" xml:space="preserve">
    <value>魔胎之境</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Cold" xml:space="preserve">
    <value>寒冷</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="ConstructionProgress" xml:space="preserve">
    <value>战舰建造进度</value>
  </data>
  <data name="DailySale" xml:space="preserve">
    <value>每日折扣</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>深色</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>白昼</value>
  </data>
  <data name="Earth" xml:space="preserve">
    <value>地球</value>
  </data>
  <data name="ExpiryDateFormat" xml:space="preserve">
    <value>{0}过期</value>
  </data>
  <data name="Fissure" xml:space="preserve">
    <value>虚空裂缝</value>
  </data>
  <data name="FollowSystem" xml:space="preserve">
    <value>跟随系统</value>
  </data>
  <data name="Fomorian" xml:space="preserve">
    <value>巨人战舰</value>
  </data>
  <data name="Found" xml:space="preserve">
    <value>已发现</value>
  </data>
  <data name="GameEvents" xml:space="preserve">
    <value>游戏活动</value>
  </data>
  <data name="HelpAndSupport" xml:space="preserve">
    <value>帮助 &amp; 支持</value>
  </data>
  <data name="Invasions" xml:space="preserve">
    <value>入侵任务</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>资料库</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>浅色</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>菜单</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>新闻</value>
  </data>
  <data name="Night" xml:space="preserve">
    <value>黑夜</value>
  </data>
  <data name="Nightwave" xml:space="preserve">
    <value>午夜电波</value>
  </data>
  <data name="NoEvents" xml:space="preserve">
    <value>当前没有游戏活动</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>未发现</value>
  </data>
  <data name="OrbVallis" xml:space="preserve">
    <value>奥布山谷</value>
  </data>
  <data name="PlainsOfEidolon" xml:space="preserve">
    <value>夜灵平野</value>
  </data>
  <data name="Razorback" xml:space="preserve">
    <value>利刃豺狼</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="SearchTip" xml:space="preserve">
    <value>从 Warframe Market 中找找你想要的</value>
  </data>
  <data name="SearchTipSlim" xml:space="preserve">
    <value>在 WM 中搜索</value>
  </data>
  <data name="ShowItems" xml:space="preserve">
    <value>查看物品</value>
  </data>
  <data name="Skirmish" xml:space="preserve">
    <value>前哨战</value>
  </data>
  <data name="Sortie" xml:space="preserve">
    <value>突击任务</value>
  </data>
  <data name="SteelPath" xml:space="preserve">
    <value>钢铁之路</value>
  </data>
  <data name="SyndicateMissions" xml:space="preserve">
    <value>赏金任务</value>
  </data>
  <data name="VoidTrader" xml:space="preserve">
    <value>虚空商人</value>
  </data>
  <data name="Warm" xml:space="preserve">
    <value>温暖</value>
  </data>
  <data name="WorldCycle" xml:space="preserve">
    <value>世界周期</value>
  </data>
  <data name="WorldState" xml:space="preserve">
    <value>世界状态</value>
  </data>
  <data name="Zariman" xml:space="preserve">
    <value>扎里曼号</value>
  </data>
</root>