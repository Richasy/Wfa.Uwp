//<auto-generated/>
using Microsoft.EntityFrameworkCore.Migrations;

namespace Wfa.Console.Migrations
{
    public partial class initial : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "ArchGun",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    Accuracy = table.Column<double>(nullable: false),
                    Ammo = table.Column<double>(nullable: true),
                    Category = table.Column<string>(nullable: true),
                    CriticalChance = table.Column<double>(nullable: false),
                    CriticalMultiplier = table.Column<double>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    Disposition = table.Column<int>(nullable: false),
                    FireRate = table.Column<double>(nullable: false),
                    ImageName = table.Column<string>(nullable: true),
                    MagazineSize = table.Column<int>(nullable: false),
                    MasteryReq = table.Column<int>(nullable: false),
                    Multishot = table.Column<double>(nullable: false),
                    Noise = table.Column<string>(nullable: false),
                    OmegaAttenuation = table.Column<double>(nullable: false),
                    ProcChance = table.Column<double>(nullable: false),
                    ProductCategory = table.Column<string>(nullable: true),
                    ReleaseDate = table.Column<string>(nullable: true),
                    ReloadTime = table.Column<double>(nullable: false),
                    TotalDamage = table.Column<double>(nullable: false),
                    Tradable = table.Column<bool>(nullable: false),
                    Trigger = table.Column<string>(nullable: true),
                    Type = table.Column<string>(nullable: false),
                    WikiaThumbnail = table.Column<string>(nullable: true),
                    WikiaUrl = table.Column<string>(nullable: true),
                    SelfPolarities = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchGun", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ArchGunDamage",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Heat = table.Column<double>(nullable: true),
                    Impact = table.Column<double>(nullable: true),
                    Blast = table.Column<double>(nullable: true),
                    Slash = table.Column<double>(nullable: true),
                    Puncture = table.Column<double>(nullable: true),
                    Radiation = table.Column<double>(nullable: true),
                    Magnetic = table.Column<double>(nullable: true),
                    Electricity = table.Column<double>(nullable: true),
                    Toxin = table.Column<double>(nullable: true),
                    Corrosive = table.Column<double>(nullable: true),
                    Viral = table.Column<double>(nullable: true),
                    Cold = table.Column<double>(nullable: true),
                    Void = table.Column<double>(nullable: true),
                    Gas = table.Column<double>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchGunDamage", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ArchMelee",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    BlockingAngle = table.Column<int>(nullable: false),
                    Category = table.Column<string>(nullable: false),
                    ComboDuration = table.Column<int>(nullable: false),
                    CriticalChance = table.Column<double>(nullable: false),
                    CriticalMultiplier = table.Column<double>(nullable: false),
                    Description = table.Column<string>(nullable: true),
                    Disposition = table.Column<int>(nullable: false),
                    FireRate = table.Column<double>(nullable: false),
                    HeavyAttackDamage = table.Column<double>(nullable: false),
                    HeavySlamAttack = table.Column<double>(nullable: false),
                    ImageName = table.Column<string>(nullable: true),
                    MasteryReq = table.Column<int>(nullable: false),
                    OmegaAttenuation = table.Column<double>(nullable: false),
                    SelfPolarities = table.Column<string>(nullable: true),
                    ProcChance = table.Column<double>(nullable: false),
                    ProductCategory = table.Column<string>(nullable: true),
                    Range = table.Column<double>(nullable: false),
                    SlamAttack = table.Column<double>(nullable: false),
                    SlamRadialDamage = table.Column<double>(nullable: false),
                    SlamRadius = table.Column<double>(nullable: false),
                    SlideAttack = table.Column<double>(nullable: false),
                    TotalDamage = table.Column<double>(nullable: true),
                    Tradable = table.Column<bool>(nullable: false),
                    Type = table.Column<string>(nullable: false),
                    WikiaThumbnail = table.Column<string>(nullable: true),
                    WikiaUrl = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchMelee", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ArchMeleeDamage",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Heat = table.Column<double>(nullable: true),
                    Impact = table.Column<double>(nullable: true),
                    Blast = table.Column<double>(nullable: true),
                    Slash = table.Column<double>(nullable: true),
                    Puncture = table.Column<double>(nullable: true),
                    Radiation = table.Column<double>(nullable: true),
                    Magnetic = table.Column<double>(nullable: true),
                    Electricity = table.Column<double>(nullable: true),
                    Toxin = table.Column<double>(nullable: true),
                    Corrosive = table.Column<double>(nullable: true),
                    Viral = table.Column<double>(nullable: true),
                    Cold = table.Column<double>(nullable: true),
                    Void = table.Column<double>(nullable: true),
                    Gas = table.Column<double>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchMeleeDamage", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Archwing",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    Armor = table.Column<double>(nullable: false),
                    Category = table.Column<string>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    Health = table.Column<double>(nullable: false),
                    ImageName = table.Column<string>(nullable: false),
                    MasteryReq = table.Column<int>(nullable: false),
                    Power = table.Column<double>(nullable: false),
                    ProductCategory = table.Column<string>(nullable: false),
                    Shield = table.Column<double>(nullable: false),
                    SprintSpeed = table.Column<double>(nullable: false),
                    Stamina = table.Column<double>(nullable: true),
                    Tradable = table.Column<bool>(nullable: false),
                    Type = table.Column<string>(nullable: false),
                    VaultDate = table.Column<string>(nullable: true),
                    Vaulted = table.Column<bool>(nullable: true),
                    SelfPolarities = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Archwing", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Dicts",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: true),
                    Content = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Dicts", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "LichEphemeras",
                columns: table => new
                {
                    Id = table.Column<string>(nullable: false),
                    Identifier = table.Column<string>(nullable: true),
                    Name = table.Column<string>(nullable: true),
                    Thumb = table.Column<string>(nullable: true),
                    Animation = table.Column<string>(nullable: true),
                    Element = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LichEphemeras", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "LichQuirks",
                columns: table => new
                {
                    Id = table.Column<string>(nullable: false),
                    Identifier = table.Column<string>(nullable: true),
                    Name = table.Column<string>(nullable: true),
                    Description = table.Column<string>(nullable: true),
                    Group = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LichQuirks", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "LichWeapons",
                columns: table => new
                {
                    Id = table.Column<string>(nullable: false),
                    Identifier = table.Column<string>(nullable: true),
                    Name = table.Column<string>(nullable: true),
                    Thumb = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LichWeapons", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "MarketItems",
                columns: table => new
                {
                    Id = table.Column<string>(nullable: false),
                    Identifier = table.Column<string>(nullable: true),
                    Name = table.Column<string>(nullable: true),
                    Thumb = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MarketItems", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Melee",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    BlockingAngle = table.Column<int>(nullable: false),
                    Category = table.Column<string>(nullable: false),
                    ComboDuration = table.Column<int>(nullable: false),
                    CriticalChance = table.Column<double>(nullable: false),
                    CriticalMultiplier = table.Column<double>(nullable: false),
                    Description = table.Column<string>(nullable: true),
                    Disposition = table.Column<int>(nullable: false),
                    FireRate = table.Column<double>(nullable: false),
                    HeavyAttackDamage = table.Column<double>(nullable: false),
                    HeavySlamAttack = table.Column<double>(nullable: false),
                    ImageName = table.Column<string>(nullable: true),
                    MasteryReq = table.Column<int>(nullable: false),
                    OmegaAttenuation = table.Column<double>(nullable: false),
                    SelfPolarities = table.Column<string>(nullable: true),
                    ProcChance = table.Column<double>(nullable: false),
                    ProductCategory = table.Column<string>(nullable: true),
                    Range = table.Column<double>(nullable: false),
                    SlamAttack = table.Column<double>(nullable: false),
                    SlamRadialDamage = table.Column<double>(nullable: false),
                    SlamRadius = table.Column<double>(nullable: false),
                    SlideAttack = table.Column<double>(nullable: false),
                    TotalDamage = table.Column<double>(nullable: true),
                    Tradable = table.Column<bool>(nullable: false),
                    Type = table.Column<string>(nullable: false),
                    WikiaThumbnail = table.Column<string>(nullable: true),
                    WikiaUrl = table.Column<string>(nullable: true),
                    HeavySlamRadialDamage = table.Column<double>(nullable: true),
                    HeavySlamRadius = table.Column<double>(nullable: true),
                    ReleaseDate = table.Column<string>(nullable: true),
                    StancePolarity = table.Column<string>(nullable: true),
                    WindUp = table.Column<double>(nullable: true),
                    MaxLevelCap = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Melee", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "MeleeDamage",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Heat = table.Column<double>(nullable: true),
                    Impact = table.Column<double>(nullable: true),
                    Blast = table.Column<double>(nullable: true),
                    Slash = table.Column<double>(nullable: true),
                    Puncture = table.Column<double>(nullable: true),
                    Radiation = table.Column<double>(nullable: true),
                    Magnetic = table.Column<double>(nullable: true),
                    Electricity = table.Column<double>(nullable: true),
                    Toxin = table.Column<double>(nullable: true),
                    Corrosive = table.Column<double>(nullable: true),
                    Viral = table.Column<double>(nullable: true),
                    Cold = table.Column<double>(nullable: true),
                    Void = table.Column<double>(nullable: true),
                    Gas = table.Column<double>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MeleeDamage", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Metas",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: true),
                    Value = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Metas", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Mods",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    BaseDrain = table.Column<int>(nullable: true),
                    Category = table.Column<string>(nullable: false),
                    CompatName = table.Column<string>(nullable: true),
                    FusionLimit = table.Column<int>(nullable: false),
                    ImageName = table.Column<string>(nullable: false),
                    IsAugment = table.Column<bool>(nullable: true),
                    Polarity = table.Column<string>(nullable: true),
                    Rarity = table.Column<string>(nullable: true),
                    ReleaseDate = table.Column<string>(nullable: true),
                    Tradable = table.Column<bool>(nullable: true),
                    Transmutable = table.Column<bool>(nullable: true),
                    Type = table.Column<string>(nullable: false),
                    WikiaThumbnail = table.Column<string>(nullable: true),
                    WikiaUrl = table.Column<string>(nullable: true),
                    IsUtility = table.Column<bool>(nullable: true),
                    ModSet = table.Column<string>(nullable: true),
                    IsExilus = table.Column<bool>(nullable: true),
                    Description = table.Column<string>(nullable: true),
                    ModSetEffects = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Mods", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Patches",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Origin = table.Column<string>(nullable: true),
                    Chs = table.Column<string>(nullable: true),
                    Cht = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Patches", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Primaries",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    Accuracy = table.Column<double>(nullable: false),
                    Ammo = table.Column<double>(nullable: true),
                    Category = table.Column<string>(nullable: true),
                    CriticalChance = table.Column<double>(nullable: false),
                    CriticalMultiplier = table.Column<double>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    Disposition = table.Column<int>(nullable: false),
                    FireRate = table.Column<double>(nullable: false),
                    ImageName = table.Column<string>(nullable: true),
                    MagazineSize = table.Column<int>(nullable: false),
                    MasteryReq = table.Column<int>(nullable: false),
                    Multishot = table.Column<double>(nullable: false),
                    Noise = table.Column<string>(nullable: false),
                    OmegaAttenuation = table.Column<double>(nullable: false),
                    ProcChance = table.Column<double>(nullable: false),
                    ProductCategory = table.Column<string>(nullable: true),
                    ReleaseDate = table.Column<string>(nullable: true),
                    ReloadTime = table.Column<double>(nullable: false),
                    TotalDamage = table.Column<double>(nullable: false),
                    Tradable = table.Column<bool>(nullable: false),
                    Trigger = table.Column<string>(nullable: true),
                    Type = table.Column<string>(nullable: false),
                    WikiaThumbnail = table.Column<string>(nullable: true),
                    WikiaUrl = table.Column<string>(nullable: true),
                    SelfPolarities = table.Column<string>(nullable: true),
                    MaxLevelCap = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Primaries", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "PrimaryDamage",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Heat = table.Column<double>(nullable: true),
                    Impact = table.Column<double>(nullable: true),
                    Blast = table.Column<double>(nullable: true),
                    Slash = table.Column<double>(nullable: true),
                    Puncture = table.Column<double>(nullable: true),
                    Radiation = table.Column<double>(nullable: true),
                    Magnetic = table.Column<double>(nullable: true),
                    Electricity = table.Column<double>(nullable: true),
                    Toxin = table.Column<double>(nullable: true),
                    Corrosive = table.Column<double>(nullable: true),
                    Viral = table.Column<double>(nullable: true),
                    Cold = table.Column<double>(nullable: true),
                    Void = table.Column<double>(nullable: true),
                    Gas = table.Column<double>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PrimaryDamage", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "RivenAttributes",
                columns: table => new
                {
                    Id = table.Column<string>(nullable: false),
                    Identifier = table.Column<string>(nullable: true),
                    Group = table.Column<string>(nullable: true),
                    Prefix = table.Column<string>(nullable: true),
                    Suffix = table.Column<string>(nullable: true),
                    PositiveIsNegative = table.Column<bool>(nullable: false),
                    Effect = table.Column<string>(nullable: true),
                    Unit = table.Column<string>(nullable: true),
                    IsNegativeOnly = table.Column<bool>(nullable: false),
                    IsSearchOnly = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RivenAttributes", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "RivenWeapons",
                columns: table => new
                {
                    Id = table.Column<string>(nullable: false),
                    Identifier = table.Column<string>(nullable: true),
                    Name = table.Column<string>(nullable: true),
                    Thumb = table.Column<string>(nullable: true),
                    RivenType = table.Column<string>(nullable: true),
                    Group = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RivenWeapons", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Secondaries",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    Accuracy = table.Column<double>(nullable: false),
                    Ammo = table.Column<double>(nullable: true),
                    Category = table.Column<string>(nullable: true),
                    CriticalChance = table.Column<double>(nullable: false),
                    CriticalMultiplier = table.Column<double>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    Disposition = table.Column<int>(nullable: false),
                    FireRate = table.Column<double>(nullable: false),
                    ImageName = table.Column<string>(nullable: true),
                    MagazineSize = table.Column<int>(nullable: false),
                    MasteryReq = table.Column<int>(nullable: false),
                    Multishot = table.Column<double>(nullable: false),
                    Noise = table.Column<string>(nullable: false),
                    OmegaAttenuation = table.Column<double>(nullable: false),
                    ProcChance = table.Column<double>(nullable: false),
                    ProductCategory = table.Column<string>(nullable: true),
                    ReleaseDate = table.Column<string>(nullable: true),
                    ReloadTime = table.Column<double>(nullable: false),
                    TotalDamage = table.Column<double>(nullable: false),
                    Tradable = table.Column<bool>(nullable: false),
                    Trigger = table.Column<string>(nullable: true),
                    Type = table.Column<string>(nullable: false),
                    WikiaThumbnail = table.Column<string>(nullable: true),
                    WikiaUrl = table.Column<string>(nullable: true),
                    SelfPolarities = table.Column<string>(nullable: true),
                    MaxLevelCap = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Secondaries", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "SecondaryDamage",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Heat = table.Column<double>(nullable: true),
                    Impact = table.Column<double>(nullable: true),
                    Blast = table.Column<double>(nullable: true),
                    Slash = table.Column<double>(nullable: true),
                    Puncture = table.Column<double>(nullable: true),
                    Radiation = table.Column<double>(nullable: true),
                    Magnetic = table.Column<double>(nullable: true),
                    Electricity = table.Column<double>(nullable: true),
                    Toxin = table.Column<double>(nullable: true),
                    Corrosive = table.Column<double>(nullable: true),
                    Viral = table.Column<double>(nullable: true),
                    Cold = table.Column<double>(nullable: true),
                    Void = table.Column<double>(nullable: true),
                    Gas = table.Column<double>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SecondaryDamage", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Translates",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    En = table.Column<string>(nullable: true),
                    Zh = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Translates", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Warframes",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    UniqueName = table.Column<string>(nullable: false),
                    Name = table.Column<string>(nullable: false),
                    Armor = table.Column<double>(nullable: false),
                    Category = table.Column<string>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    Health = table.Column<double>(nullable: false),
                    ImageName = table.Column<string>(nullable: false),
                    MasteryReq = table.Column<int>(nullable: false),
                    Power = table.Column<double>(nullable: false),
                    ProductCategory = table.Column<string>(nullable: false),
                    Shield = table.Column<double>(nullable: false),
                    SprintSpeed = table.Column<double>(nullable: false),
                    Stamina = table.Column<double>(nullable: true),
                    Tradable = table.Column<bool>(nullable: false),
                    Type = table.Column<string>(nullable: false),
                    VaultDate = table.Column<string>(nullable: true),
                    Vaulted = table.Column<bool>(nullable: true),
                    SelfPolarities = table.Column<string>(nullable: true),
                    Aura = table.Column<string>(nullable: true),
                    Conclave = table.Column<bool>(nullable: false),
                    PassiveDescription = table.Column<string>(nullable: true),
                    Sex = table.Column<string>(nullable: true),
                    WikiaThumbnail = table.Column<string>(nullable: true),
                    WikiaUrl = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Warframes", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ArchGunAttack",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: false),
                    Speed = table.Column<double>(nullable: true),
                    CritChance = table.Column<double>(nullable: true),
                    CritMult = table.Column<double>(nullable: true),
                    StatusChance = table.Column<double>(nullable: true),
                    ChargeTime = table.Column<double>(nullable: true),
                    ShotType = table.Column<string>(nullable: true),
                    Flight = table.Column<double>(nullable: true),
                    DamageId = table.Column<int>(nullable: true),
                    ArchGunId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchGunAttack", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ArchGunAttack_ArchGun_ArchGunId",
                        column: x => x.ArchGunId,
                        principalTable: "ArchGun",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ArchGunAttack_ArchGunDamage_DamageId",
                        column: x => x.DamageId,
                        principalTable: "ArchGunDamage",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ArchMeleeAttack",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: false),
                    Speed = table.Column<double>(nullable: true),
                    CritChance = table.Column<double>(nullable: true),
                    CritMult = table.Column<double>(nullable: true),
                    StatusChance = table.Column<double>(nullable: true),
                    DamageId = table.Column<int>(nullable: true),
                    ArchMeleeId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchMeleeAttack", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ArchMeleeAttack_ArchMelee_ArchMeleeId",
                        column: x => x.ArchMeleeId,
                        principalTable: "ArchMelee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ArchMeleeAttack_ArchMeleeDamage_DamageId",
                        column: x => x.DamageId,
                        principalTable: "ArchMeleeDamage",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ArchwingAbility",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    ArchwingId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchwingAbility", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ArchwingAbility_Archwing_ArchwingId",
                        column: x => x.ArchwingId,
                        principalTable: "Archwing",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MeleeAttack",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: false),
                    Speed = table.Column<double>(nullable: true),
                    CritChance = table.Column<double>(nullable: true),
                    CritMult = table.Column<double>(nullable: true),
                    StatusChance = table.Column<double>(nullable: true),
                    ChargeTime = table.Column<double>(nullable: true),
                    ShotType = table.Column<string>(nullable: true),
                    Flight = table.Column<double>(nullable: true),
                    DamageId = table.Column<int>(nullable: true),
                    MeleeId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MeleeAttack", x => x.Id);
                    table.ForeignKey(
                        name: "FK_MeleeAttack_MeleeDamage_DamageId",
                        column: x => x.DamageId,
                        principalTable: "MeleeDamage",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_MeleeAttack_Melee_MeleeId",
                        column: x => x.MeleeId,
                        principalTable: "Melee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ModEffect",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Level = table.Column<int>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    ModId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ModEffect", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ModEffect_Mods_ModId",
                        column: x => x.ModId,
                        principalTable: "Mods",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PrimaryAttack",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: false),
                    Speed = table.Column<double>(nullable: true),
                    CritChance = table.Column<double>(nullable: true),
                    CritMult = table.Column<double>(nullable: true),
                    StatusChance = table.Column<double>(nullable: true),
                    ChargeTime = table.Column<double>(nullable: true),
                    ShotType = table.Column<string>(nullable: true),
                    Flight = table.Column<double>(nullable: true),
                    DamageId = table.Column<int>(nullable: true),
                    PrimaryId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PrimaryAttack", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PrimaryAttack_PrimaryDamage_DamageId",
                        column: x => x.DamageId,
                        principalTable: "PrimaryDamage",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_PrimaryAttack_Primaries_PrimaryId",
                        column: x => x.PrimaryId,
                        principalTable: "Primaries",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SecondaryAttack",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: false),
                    Speed = table.Column<double>(nullable: true),
                    CritChance = table.Column<double>(nullable: true),
                    CritMult = table.Column<double>(nullable: true),
                    StatusChance = table.Column<double>(nullable: true),
                    ChargeTime = table.Column<double>(nullable: true),
                    ShotType = table.Column<string>(nullable: true),
                    Flight = table.Column<double>(nullable: true),
                    DamageId = table.Column<int>(nullable: true),
                    SecondaryId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SecondaryAttack", x => x.Id);
                    table.ForeignKey(
                        name: "FK_SecondaryAttack_SecondaryDamage_DamageId",
                        column: x => x.DamageId,
                        principalTable: "SecondaryDamage",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_SecondaryAttack_Secondaries_SecondaryId",
                        column: x => x.SecondaryId,
                        principalTable: "Secondaries",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WarframeAbility",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(nullable: false),
                    Description = table.Column<string>(nullable: false),
                    WarframeId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WarframeAbility", x => x.Id);
                    table.ForeignKey(
                        name: "FK_WarframeAbility_Warframes_WarframeId",
                        column: x => x.WarframeId,
                        principalTable: "Warframes",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_ArchGunAttack_ArchGunId",
                table: "ArchGunAttack",
                column: "ArchGunId");

            migrationBuilder.CreateIndex(
                name: "IX_ArchGunAttack_DamageId",
                table: "ArchGunAttack",
                column: "DamageId");

            migrationBuilder.CreateIndex(
                name: "IX_ArchMeleeAttack_ArchMeleeId",
                table: "ArchMeleeAttack",
                column: "ArchMeleeId");

            migrationBuilder.CreateIndex(
                name: "IX_ArchMeleeAttack_DamageId",
                table: "ArchMeleeAttack",
                column: "DamageId");

            migrationBuilder.CreateIndex(
                name: "IX_ArchwingAbility_ArchwingId",
                table: "ArchwingAbility",
                column: "ArchwingId");

            migrationBuilder.CreateIndex(
                name: "IX_MeleeAttack_DamageId",
                table: "MeleeAttack",
                column: "DamageId");

            migrationBuilder.CreateIndex(
                name: "IX_MeleeAttack_MeleeId",
                table: "MeleeAttack",
                column: "MeleeId");

            migrationBuilder.CreateIndex(
                name: "IX_ModEffect_ModId",
                table: "ModEffect",
                column: "ModId");

            migrationBuilder.CreateIndex(
                name: "IX_PrimaryAttack_DamageId",
                table: "PrimaryAttack",
                column: "DamageId");

            migrationBuilder.CreateIndex(
                name: "IX_PrimaryAttack_PrimaryId",
                table: "PrimaryAttack",
                column: "PrimaryId");

            migrationBuilder.CreateIndex(
                name: "IX_SecondaryAttack_DamageId",
                table: "SecondaryAttack",
                column: "DamageId");

            migrationBuilder.CreateIndex(
                name: "IX_SecondaryAttack_SecondaryId",
                table: "SecondaryAttack",
                column: "SecondaryId");

            migrationBuilder.CreateIndex(
                name: "IX_WarframeAbility_WarframeId",
                table: "WarframeAbility",
                column: "WarframeId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ArchGunAttack");

            migrationBuilder.DropTable(
                name: "ArchMeleeAttack");

            migrationBuilder.DropTable(
                name: "ArchwingAbility");

            migrationBuilder.DropTable(
                name: "Dicts");

            migrationBuilder.DropTable(
                name: "LichEphemeras");

            migrationBuilder.DropTable(
                name: "LichQuirks");

            migrationBuilder.DropTable(
                name: "LichWeapons");

            migrationBuilder.DropTable(
                name: "MarketItems");

            migrationBuilder.DropTable(
                name: "MeleeAttack");

            migrationBuilder.DropTable(
                name: "Metas");

            migrationBuilder.DropTable(
                name: "ModEffect");

            migrationBuilder.DropTable(
                name: "Patches");

            migrationBuilder.DropTable(
                name: "PrimaryAttack");

            migrationBuilder.DropTable(
                name: "RivenAttributes");

            migrationBuilder.DropTable(
                name: "RivenWeapons");

            migrationBuilder.DropTable(
                name: "SecondaryAttack");

            migrationBuilder.DropTable(
                name: "Translates");

            migrationBuilder.DropTable(
                name: "WarframeAbility");

            migrationBuilder.DropTable(
                name: "ArchGun");

            migrationBuilder.DropTable(
                name: "ArchGunDamage");

            migrationBuilder.DropTable(
                name: "ArchMelee");

            migrationBuilder.DropTable(
                name: "ArchMeleeDamage");

            migrationBuilder.DropTable(
                name: "Archwing");

            migrationBuilder.DropTable(
                name: "MeleeDamage");

            migrationBuilder.DropTable(
                name: "Melee");

            migrationBuilder.DropTable(
                name: "Mods");

            migrationBuilder.DropTable(
                name: "PrimaryDamage");

            migrationBuilder.DropTable(
                name: "Primaries");

            migrationBuilder.DropTable(
                name: "SecondaryDamage");

            migrationBuilder.DropTable(
                name: "Secondaries");

            migrationBuilder.DropTable(
                name: "Warframes");
        }
    }
}
